Calling parse('Whoever is not a great-grandfather of Clyde is a stepbrother of Brian')...
Calling bracket('Whoever is not a great-grandfather of Clyde is a stepbrother of Brian', {})...
...bracket returned ('Whoever is [p1(X): not a great-grandfather of Clyde] is [p2(X): a stepbrother of Brian]', ['p1(X)', 'p2(X)'])
Calling define_predicates('Whoever is [p1(X): not a great-grandfather of Clyde] is [p2(X): a stepbrother of Brian]', ['p1(X)', 'p2(X)'])...
...define_predicates returned {
      'p1(X)': Alignment(text='not a great-grandfather of Clyde', logic='p1(X) =def= -great_grandfather(X, "Clyde").'),
      'p2(X)': Alignment(text='a stepbrother of Brian', logic='p2(X) =def= stepbrother(X, "Brian").')
   }
Calling simplify('Whoever is [p1(X): not a great-grandfather of Clyde] is [p2(X): a stepbrother of Brian]', ['p1(X)', 'p2(X)'])...
...simplify returned 'Whoever is p1(X) is p2(X)'
Calling bracket('Whoever is p1(X) is p2(X)', {'p1(X)': Alignment(text='not a great-grandfather of Clyde', omitted)})...
...bracket returned ('[rule1: Whoever is p1(X) is p2(X)]', ['rule1'])
Calling define_predicates('[rule1: Whoever is p1(X) is p2(X)]', ['rule1'])...
...define_predicates returned {'rule1': Alignment(text='Whoever is p1(X) is p2(X)', logic='p2(X) :- p1(X). %rule1')}
