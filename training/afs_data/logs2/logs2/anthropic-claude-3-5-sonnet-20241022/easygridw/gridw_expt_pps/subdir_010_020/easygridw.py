from typing import List, Tuple

Point = Tuple[int, int]


@traced
def extract_start(sentence: str) -> Tuple[int, int]:
    """Extract the starting point for navigation from a sentence.
    """
    ...


@traced
def extract_goal(sentence: str) -> Tuple[int, int]:
    """Extract the ending point for navigation from a sentence.
    """
    ...


@traced
def move(cursor: Point, destination: Point) -> Tuple[str, Point]:
    """Decide on the next move of the cursor toward the point.
    """
    ...


@traced
def at_destination(cursor: Point, destination: Point) -> bool:
    """Decide if the cursor is at the destination point.
    """
    ...


def gridw(input_str):
    """Navigate from point to point on a grid.

  >>> gridw('What directions should be followed to navigate from (1,2) to (6,5)?')
  Calling extract_start('What directions should be followed to navigate from (1,2) to (6,5)?')...
  ...extract_start returned (1, 2)
  Calling extract_goal('What directions should be followed to navigate from (1,2) to (6,5)?')...
  ...extract_goal returned (6, 5)
  Calling at_destination((1, 2), (6, 5))...
  ...at_destination returned False
  Calling move((1, 2), (6, 5))...
  ...move returned ('south', (1, 1))
  Calling at_destination((1, 1), (6, 5))...
  ...at_destination returned False
  Calling move((1, 1), (6, 5))...
  ...move returned ('east', (2, 1))
  Calling at_destination((2, 1), (6, 5))...
  ...at_destination returned False
  Calling move((2, 1), (6, 5))...
  ...move returned ('east', (3, 1))
  Calling at_destination((3, 1), (6, 5))...
  ...at_destination returned False
  Calling move((3, 1), (6, 5))...
  ...move returned ('east', (4, 1))
  Calling at_destination((4, 1), (6, 5))...
  ...at_destination returned False
  Calling move((4, 1), (6, 5))...
  ...move returned ('east', (5, 1))
  Calling at_destination((5, 1), (6, 5))...
  ...at_destination returned False
  Calling move((5, 1), (6, 5))...
  ...move returned ('north', (5, 2))
  Calling at_destination((5, 2), (6, 5))...
  ...at_destination returned False
  Calling move((5, 2), (6, 5))...
  ...move returned ('north', (5, 3))
  Calling at_destination((5, 3), (6, 5))...
  ...at_destination returned False
  Calling move((5, 3), (6, 5))...
  ...move returned ('north', (5, 4))
  Calling at_destination((5, 4), (6, 5))...
  ...at_destination returned False
  Calling move((5, 4), (6, 5))...
  ...move returned ('north', (5, 5))
  Calling at_destination((5, 5), (6, 5))...
  ...at_destination returned False
  Calling move((5, 5), (6, 5))...
  ...move returned ('east', (6, 5))
  Calling at_destination((6, 5), (6, 5))...
  ...at_destination returned True
  Final answer: south east east east east north north north north east
  ['south', 'east', 'east', 'east', 'east', 'north', 'north', 'north', 'north', 'east']

  >>> gridw('What directions should be followed to navigate from (3,3) to (7,5)?')
  Calling extract_start('What directions should be followed to navigate from (3,3) to (7,5)?')...
  ...extract_start returned (3, 3)
  Calling extract_goal('What directions should be followed to navigate from (3,3) to (7,5)?')...
  ...extract_goal returned (7, 5)
  Calling at_destination((3, 3), (7, 5))...
  ...at_destination returned False
  Calling move((3, 3), (7, 5))...
  ...move returned ('south', (3, 2))
  Calling at_destination((3, 2), (7, 5))...
  ...at_destination returned False
  Calling move((3, 2), (7, 5))...
  ...move returned ('south', (3, 1))
  Calling at_destination((3, 1), (7, 5))...
  ...at_destination returned False
  Calling move((3, 1), (7, 5))...
  ...move returned ('east', (4, 1))
  Calling at_destination((4, 1), (7, 5))...
  ...at_destination returned False
  Calling move((4, 1), (7, 5))...
  ...move returned ('east', (5, 1))
  Calling at_destination((5, 1), (7, 5))...
  ...at_destination returned False
  Calling move((5, 1), (7, 5))...
  ...move returned ('north', (5, 2))
  Calling at_destination((5, 2), (7, 5))...
  ...at_destination returned False
  Calling move((5, 2), (7, 5))...
  ...move returned ('north', (5, 3))
  Calling at_destination((5, 3), (7, 5))...
  ...at_destination returned False
  Calling move((5, 3), (7, 5))...
  ...move returned ('north', (5, 4))
  Calling at_destination((5, 4), (7, 5))...
  ...at_destination returned False
  Calling move((5, 4), (7, 5))...
  ...move returned ('north', (5, 5))
  Calling at_destination((5, 5), (7, 5))...
  ...at_destination returned False
  Calling move((5, 5), (7, 5))...
  ...move returned ('east', (6, 5))
  Calling at_destination((6, 5), (7, 5))...
  ...at_destination returned False
  Calling move((6, 5), (7, 5))...
  ...move returned ('east', (7, 5))
  Calling at_destination((7, 5), (7, 5))...
  ...at_destination returned True
  Final answer: south south east east north north north north east east
  ['south', 'south', 'east', 'east', 'north', 'north', 'north', 'north', 'east', 'east']

  >>> gridw('What directions should be followed to navigate from (0,6) to (5,6)?')
  Calling extract_start('What directions should be followed to navigate from (0,6) to (5,6)?')...
  ...extract_start returned (0, 6)
  Calling extract_goal('What directions should be followed to navigate from (0,6) to (5,6)?')...
  ...extract_goal returned (5, 6)
  Calling at_destination((0, 6), (5, 6))...
  ...at_destination returned False
  Calling move((0, 6), (5, 6))...
  ...move returned ('south', (0, 5))
  Calling at_destination((0, 5), (5, 6))...
  ...at_destination returned False
  Calling move((0, 5), (5, 6))...
  ...move returned ('south', (0, 4))
  Calling at_destination((0, 4), (5, 6))...
  ...at_destination returned False
  Calling move((0, 4), (5, 6))...
  ...move returned ('south', (0, 3))
  Calling at_destination((0, 3), (5, 6))...
  ...at_destination returned False
  Calling move((0, 3), (5, 6))...
  ...move returned ('south', (0, 2))
  Calling at_destination((0, 2), (5, 6))...
  ...at_destination returned False
  Calling move((0, 2), (5, 6))...
  ...move returned ('south', (0, 1))
  Calling at_destination((0, 1), (5, 6))...
  ...at_destination returned False
  Calling move((0, 1), (5, 6))...
  ...move returned ('east', (1, 1))
  Calling at_destination((1, 1), (5, 6))...
  ...at_destination returned False
  Calling move((1, 1), (5, 6))...
  ...move returned ('east', (2, 1))
  Calling at_destination((2, 1), (5, 6))...
  ...at_destination returned False
  Calling move((2, 1), (5, 6))...
  ...move returned ('east', (3, 1))
  Calling at_destination((3, 1), (5, 6))...
  ...at_destination returned False
  Calling move((3, 1), (5, 6))...
  ...move returned ('east', (4, 1))
  Calling at_destination((4, 1), (5, 6))...
  ...at_destination returned False
  Calling move((4, 1), (5, 6))...
  ...move returned ('east', (5, 1))
  Calling at_destination((5, 1), (5, 6))...
  ...at_destination returned False
  Calling move((5, 1), (5, 6))...
  ...move returned ('north', (5, 2))
  Calling at_destination((5, 2), (5, 6))...
  ...at_destination returned False
  Calling move((5, 2), (5, 6))...
  ...move returned ('north', (5, 3))
  Calling at_destination((5, 3), (5, 6))...
  ...at_destination returned False
  Calling move((5, 3), (5, 6))...
  ...move returned ('north', (5, 4))
  Calling at_destination((5, 4), (5, 6))...
  ...at_destination returned False
  Calling move((5, 4), (5, 6))...
  ...move returned ('north', (5, 5))
  Calling at_destination((5, 5), (5, 6))...
  ...at_destination returned False
  Calling move((5, 5), (5, 6))...
  ...move returned ('north', (5, 6))
  Calling at_destination((5, 6), (5, 6))...
  ...at_destination returned True
  Final answer: south south south south south east east east east east north north north north north
  ['south', 'south', 'south', 'south', 'south', 'east', 'east', 'east', 'east', 'east', 'north', 'north', 'north', 'north', 'north']

  """
    ...
